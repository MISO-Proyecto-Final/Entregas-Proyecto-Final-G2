@startuml
package "presentation" {
    component "customer portal"{
        portout gw_portal_port_out
    }
    component "client admin dashboard"{
        portout gw_admin_port_out
    }
    component "mobile app"{
        portout gw_mobile_port_out
    }
}





package "integration" {
    component "integration service"
}

package gateway {
    component "api gateway" {
        portin gw_portal_port
        portin gw_admin_port
        portin gw_mobile_port
        portout iauth_port_gw
        portout iauthorization_port_gw
        portout icustomer_tenant_management_port_gw
        portout suscription_plan_management_port_gw
        portout user_management_port_gw
        portout billing_management_port_gw
        portout incident_process_port_gw
        portout analytics_port_gw
        portout generative_ia_orchestrator_port_gw
        portout analytics_engine_port_gw
    }

}
interface igwportal
interface igwadmin
interface igwmobile

gw_portal_port -up- igwportal
gw_admin_port -up- igwadmin
gw_mobile_port -up- igwmobile

gw_portal_port_out -down-( igwportal
gw_admin_port_out -down-( igwadmin
gw_mobile_port_out -down-( igwmobile
note right of "api gateway" 
    "api gateway" is a component that acts 
    as a reverse proxy, routing requests from 
    clients to the appropriate services. 
    It also provides cross-cutting concerns such as authentication, 
    authorization, rate limiting, and logging.
end note

package security {
    component "authorization service"{
        port iauthorization_port
    }
    component "authentication service"{
        port iauth_port
    }
}
interface iauth
iauth_port -up- iauth
iauth_port_gw -down-( iauth

interface iauthorization
iauthorization_port -up- iauthorization
iauthorization_port_gw -down-( iauthorization
package "business logic" {
    component "customer tenant management"{
        portin customer_tenant_management_port

    }
    component "user management" {
        portin user_management_port
    }
    component "suscription plan management"{
        portin suscription_plan_management_port
    }
    component "billing management"{
        portin billing_management_port
    }
    component "incident process"{
        portin incident_process_port
    }
    component analitycs{
        portin analytics_port
    }
    component "generative ia orchestrator"{
        portin generative_ia_orchestrator_port
    }
    component "analytics engine"{
        portin analytics_engine_port
    }
}


interface icustomer_tenant_management
customer_tenant_management_port -up- icustomer_tenant_management
icustomer_tenant_management_port_gw -down-( icustomer_tenant_management

interface iuser_management
user_management_port -up- iuser_management
user_management_port_gw -down-( iuser_management

interface isuscription_plan_management
suscription_plan_management_port -up- isuscription_plan_management
suscription_plan_management_port_gw -down-( isuscription_plan_management

interface ibilling_management
billing_management_port -up- ibilling_management
billing_management_port_gw -down-( ibilling_management

interface iincident_process
incident_process_port -up- iincident_process
incident_process_port_gw -down-( iincident_process

interface ianalytics
analytics_port -up- ianalytics
analytics_port_gw -down-( ianalytics

interface igenerative_ia_orchestrator
generative_ia_orchestrator_port -up- igenerative_ia_orchestrator
generative_ia_orchestrator_port_gw -down-( igenerative_ia_orchestrator

interface ianalytics_engine
analytics_engine_port -up- ianalytics_engine
analytics_engine_port_gw -down-( ianalytics_engine



note bottom of "customer tenant management"
    "customer tenant management" es un componente que 
    se encarga de gestionar los 
    clientes de ABCall, sus configuraciones 
    y el estado general de la suscripción al servicio.
end note

note bottom of "suscription plan management"
    "suscription plan management" Gestiona la informacion y 
    configuracion de las susbcripciones y planes.
    Incluye la configuracion de precios,
    limites de uso y restricciones.
    Registro de historico de cambios de planes para clientes.
    Selección de planes y configuracion de planes por cliente.
end note


package common {
    component "notification service"{
        portin notification_service_port
        portout email_service_port_out
        portout sms_service_port_out
        portout push_notification_service_port_out
    }

    component "email service"{
        portin email_service_port
    }

    interface inotification_email
    email_service_port -up- inotification_email
    email_service_port_out -down-( inotification_email

    component "sms service"{
        portin sms_service_port
    }

    interface inotification_sms
    sms_service_port -up- inotification_sms
    sms_service_port_out -down-( inotification_sms

    component "push notification service"{
        portin push_notification_service_port
    }

    interface inotification_push_notification
    push_notification_service_port -up- inotification_push_notification
    push_notification_service_port_out -down-( inotification_push_notification

    component "logging service" {
        portin logging_service_port
    }

    component "monitoring service"{
        portin monitoring_service_port
    }

    component "reporting service"{
        portin reporting_service_port
    }
    component "file storage service"{
        portin file_storage_service_port
    }
    component "configuration service"{
        portin configuration_service_port
    }
    component "cache service"{
        portin cache_service_port
    }
}

interface ilogging
logging_service_port -up- ilogging

interface imonitoring
monitoring_service_port -up- imonitoring

interface ireporting
reporting_service_port -up- ireporting

interface ifile_storage
file_storage_service_port -up- ifile_storage

interface iconfiguration
configuration_service_port -up- iconfiguration

interface icache
cache_service_port -up- icache

@enduml